#! /usr/bin/python3

import sys
sys.path.insert(0, '..')

import cb_solver




BOARD = "010101010101010"
assert len(BOARD) == 15

VALID_SOLUTIONS = [
  [(1, 3, 6), (5, 9, 14), (6, 7, 8), (14, 13, 12), (11, 12, 13), (13, 8, 4)],
  [(1, 3, 6), (5, 9, 14), (14, 13, 12), (6, 7, 8), (11, 12, 13), (13, 8, 4)],
  [(1, 3, 6), (5, 9, 14), (14, 13, 12), (11, 12, 13), (6, 7, 8), (13, 8, 4)],
  [(1, 3, 6), (5, 9, 14), (14, 13, 12), (12, 7, 3), (3, 6, 10), (10, 11, 12)],
  [(1, 3, 6), (5, 9, 14), (14, 13, 12), (12, 11, 10), (10, 6, 3), (3, 7, 12)],
  [(1, 3, 6), (6, 7, 8), (5, 9, 14), (14, 13, 12), (11, 12, 13), (13, 8, 4)],
  [(1, 3, 6), (6, 7, 8), (9, 5, 2), (13, 8, 4), (2, 4, 7), (11, 7, 4)],
  [(1, 3, 6), (6, 7, 8), (13, 8, 4), (9, 5, 2), (2, 4, 7), (11, 7, 4)],
  [(1, 3, 6), (9, 5, 2), (6, 7, 8), (13, 8, 4), (2, 4, 7), (11, 7, 4)],
  [(1, 3, 6), (9, 5, 2), (11, 7, 4), (2, 4, 7), (6, 7, 8), (13, 8, 4)],
  [(1, 3, 6), (11, 7, 4), (9, 5, 2), (2, 4, 7), (6, 7, 8), (13, 8, 4)],
  [(5, 9, 14), (1, 3, 6), (6, 7, 8), (14, 13, 12), (11, 12, 13), (13, 8, 4)],
  [(5, 9, 14), (1, 3, 6), (14, 13, 12), (6, 7, 8), (11, 12, 13), (13, 8, 4)],
  [(5, 9, 14), (1, 3, 6), (14, 13, 12), (11, 12, 13), (6, 7, 8), (13, 8, 4)],
  [(5, 9, 14), (1, 3, 6), (14, 13, 12), (12, 7, 3), (3, 6, 10), (10, 11, 12)],
  [(5, 9, 14), (1, 3, 6), (14, 13, 12), (12, 11, 10), (10, 6, 3), (3, 7, 12)],
  [(5, 9, 14), (14, 13, 12), (1, 3, 6), (6, 7, 8), (11, 12, 13), (13, 8, 4)],
  [(5, 9, 14), (14, 13, 12), (1, 3, 6), (11, 12, 13), (6, 7, 8), (13, 8, 4)],
  [(5, 9, 14), (14, 13, 12), (1, 3, 6), (12, 7, 3), (3, 6, 10), (10, 11, 12)],
  [(5, 9, 14), (14, 13, 12), (1, 3, 6), (12, 11, 10), (10, 6, 3), (3, 7, 12)],
  [(5, 9, 14), (14, 13, 12), (11, 12, 13), (1, 3, 6), (6, 7, 8), (13, 8, 4)],
  [(5, 9, 14), (14, 13, 12), (12, 11, 10), (1, 3, 6), (10, 6, 3), (3, 7, 12)],
  [(9, 5, 2), (1, 3, 6), (6, 7, 8), (13, 8, 4), (2, 4, 7), (11, 7, 4)],
  [(9, 5, 2), (1, 3, 6), (11, 7, 4), (2, 4, 7), (6, 7, 8), (13, 8, 4)],
  [(9, 5, 2), (11, 7, 4), (1, 3, 6), (2, 4, 7), (6, 7, 8), (13, 8, 4)],
  [(9, 5, 2), (11, 7, 4), (1, 4, 8), (13, 8, 4), (2, 4, 7), (3, 7, 12)],
  [(9, 5, 2), (11, 7, 4), (1, 4, 8), (13, 8, 4), (3, 4, 5), (2, 5, 9)],
  [(9, 5, 2), (11, 7, 4), (1, 4, 8), (13, 8, 4), (3, 4, 5), (5, 2, 0)],
  [(9, 5, 2), (11, 7, 4), (2, 4, 7), (1, 3, 6), (6, 7, 8), (13, 8, 4)],
  [(11, 7, 4), (1, 3, 6), (9, 5, 2), (2, 4, 7), (6, 7, 8), (13, 8, 4)],
  [(11, 7, 4), (1, 4, 8), (9, 5, 2), (13, 8, 4), (2, 4, 7), (3, 7, 12)],
  [(11, 7, 4), (1, 4, 8), (9, 5, 2), (13, 8, 4), (3, 4, 5), (2, 5, 9)],
  [(11, 7, 4), (1, 4, 8), (9, 5, 2), (13, 8, 4), (3, 4, 5), (5, 2, 0)],
  [(11, 7, 4), (1, 4, 8), (13, 8, 4), (9, 5, 2), (2, 4, 7), (3, 7, 12)],
  [(11, 7, 4), (1, 4, 8), (13, 8, 4), (9, 5, 2), (3, 4, 5), (2, 5, 9)],
  [(11, 7, 4), (1, 4, 8), (13, 8, 4), (9, 5, 2), (3, 4, 5), (5, 2, 0)],
  [(11, 7, 4), (9, 5, 2), (1, 3, 6), (2, 4, 7), (6, 7, 8), (13, 8, 4)],
  [(11, 7, 4), (9, 5, 2), (1, 4, 8), (13, 8, 4), (2, 4, 7), (3, 7, 12)],
  [(11, 7, 4), (9, 5, 2), (1, 4, 8), (13, 8, 4), (3, 4, 5), (2, 5, 9)],
  [(11, 7, 4), (9, 5, 2), (1, 4, 8), (13, 8, 4), (3, 4, 5), (5, 2, 0)],
  [(11, 7, 4), (9, 5, 2), (2, 4, 7), (1, 3, 6), (6, 7, 8), (13, 8, 4)],
                   ]


print("CALLING cb_one()...")
student = cb_solver.cb_one(BOARD)
print("DONE")
print()

if VALID_SOLUTIONS is None and student is None:
    print("SUCCESS!  Student correctly returned None.")
elif student in VALID_SOLUTIONS:
    print("SUCCESS!  Student code was in the set of solutions known to the testcase.")
else:
    print("FAIL!  The student solution was not in the set of known solutions.")
    print()
    print("STUDENT SOLUTION:")
    print(f"  {student}")
    print("KNOWN SOLUTIONS:")
    for sol in VALID_SOLUTIONS:
        print(f"  {sol}")

print()
print("TESTCASE ENDED")
